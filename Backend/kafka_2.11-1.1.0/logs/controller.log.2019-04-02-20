[2019-04-02 20:27:36,775] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-04-02 20:39:22,901] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-04-02 20:40:03,145] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-04-02 20:42:48,483] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@66d3c617, name=log4j:logger=kafka.controller (kafka.controller)
[2019-04-02 20:43:04,102] INFO [ControllerEventThread controllerId=0] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2019-04-02 20:43:04,135] INFO [Controller id=0] 0 successfully elected as the controller (kafka.controller.KafkaController)
[2019-04-02 20:43:04,137] INFO [Controller id=0] Reading controller epoch from ZooKeeper (kafka.controller.KafkaController)
[2019-04-02 20:43:04,143] INFO [Controller id=0] Initialized controller epoch to 3 and zk version 3 (kafka.controller.KafkaController)
[2019-04-02 20:43:04,146] INFO [Controller id=0] Incrementing controller epoch in ZooKeeper (kafka.controller.KafkaController)
[2019-04-02 20:43:04,164] INFO [Controller id=0] Epoch incremented to 4 (kafka.controller.KafkaController)
[2019-04-02 20:43:04,165] INFO [Controller id=0] Registering handlers (kafka.controller.KafkaController)
[2019-04-02 20:43:04,173] INFO [Controller id=0] Deleting log dir event notifications (kafka.controller.KafkaController)
[2019-04-02 20:43:04,177] INFO [Controller id=0] Deleting isr change notifications (kafka.controller.KafkaController)
[2019-04-02 20:43:04,185] INFO [Controller id=0] Initializing controller context (kafka.controller.KafkaController)
[2019-04-02 20:43:04,245] DEBUG [Controller id=0] Register BrokerModifications handler for Set(0) (kafka.controller.KafkaController)
[2019-04-02 20:43:04,293] DEBUG [Channel manager on controller 0]: Controller 0 trying to connect to broker 0 (kafka.controller.ControllerChannelManager)
[2019-04-02 20:43:04,325] INFO [RequestSendThread controllerId=0] Starting (kafka.controller.RequestSendThread)
[2019-04-02 20:43:04,330] INFO [Controller id=0] Partitions being reassigned: Map() (kafka.controller.KafkaController)
[2019-04-02 20:43:04,333] INFO [Controller id=0] Currently active brokers in the cluster: Set(0) (kafka.controller.KafkaController)
[2019-04-02 20:43:04,334] INFO [Controller id=0] Currently shutting brokers in the cluster: Set() (kafka.controller.KafkaController)
[2019-04-02 20:43:04,337] INFO [Controller id=0] Current list of topics in the cluster: Set(response_topic, post_book, course_create) (kafka.controller.KafkaController)
[2019-04-02 20:43:04,338] INFO [Controller id=0] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2019-04-02 20:43:04,343] INFO [Controller id=0] List of topics to be deleted:  (kafka.controller.KafkaController)
[2019-04-02 20:43:04,344] INFO [Controller id=0] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2019-04-02 20:43:04,347] INFO [Controller id=0] Initializing topic deletion manager (kafka.controller.KafkaController)
[2019-04-02 20:43:04,352] INFO [Controller id=0] Sending update metadata request (kafka.controller.KafkaController)
[2019-04-02 20:43:04,389] INFO [ReplicaStateMachine controllerId=0] Initializing replica state (kafka.controller.ReplicaStateMachine)
[2019-04-02 20:43:04,402] INFO [RequestSendThread controllerId=0] Controller 0 connected to 10.250.25.64:9092 (id: 0 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2019-04-02 20:43:04,420] INFO [ReplicaStateMachine controllerId=0] Triggering online replica state changes (kafka.controller.ReplicaStateMachine)
[2019-04-02 20:43:04,556] INFO [ReplicaStateMachine controllerId=0] Started replica state machine with initial state -> Map([Topic=course_create,Partition=0,Replica=0] -> OnlineReplica, [Topic=response_topic,Partition=0,Replica=0] -> OnlineReplica, [Topic=post_book,Partition=0,Replica=0] -> OnlineReplica) (kafka.controller.ReplicaStateMachine)
[2019-04-02 20:43:04,557] INFO [PartitionStateMachine controllerId=0] Initializing partition state (kafka.controller.PartitionStateMachine)
[2019-04-02 20:43:04,568] INFO [PartitionStateMachine controllerId=0] Triggering online partition state changes (kafka.controller.PartitionStateMachine)
[2019-04-02 20:43:04,588] INFO [PartitionStateMachine controllerId=0] Started partition state machine with initial state -> Map(post_book-0 -> OnlinePartition, course_create-0 -> OnlinePartition, response_topic-0 -> OnlinePartition) (kafka.controller.PartitionStateMachine)
[2019-04-02 20:43:04,591] INFO [Controller id=0] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2019-04-02 20:43:04,610] INFO [Controller id=0] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2019-04-02 20:43:04,611] INFO [Controller id=0] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2019-04-02 20:43:04,612] INFO [Controller id=0] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2019-04-02 20:43:04,612] INFO [Controller id=0] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2019-04-02 20:43:04,615] INFO [Controller id=0] Starting preferred replica leader election for partitions  (kafka.controller.KafkaController)
[2019-04-02 20:43:04,643] INFO [Controller id=0] Starting the controller scheduler (kafka.controller.KafkaController)
[2019-04-02 20:43:09,653] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-02 20:43:09,658] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), course_create-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-02 20:43:09,664] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-02 20:43:09,665] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-02 20:48:09,674] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-02 20:48:09,676] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), course_create-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-02 20:48:09,677] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-02 20:48:09,677] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-02 20:53:09,685] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-02 20:53:09,687] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), course_create-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-02 20:53:09,687] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-02 20:53:09,687] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
[2019-04-02 20:58:09,697] TRACE [Controller id=0] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2019-04-02 20:58:09,700] DEBUG [Controller id=0] Preferred replicas by broker Map(0 -> Map(post_book-0 -> Vector(0), course_create-0 -> Vector(0), response_topic-0 -> Vector(0))) (kafka.controller.KafkaController)
[2019-04-02 20:58:09,701] DEBUG [Controller id=0] Topics not in preferred replica for broker 0 Map() (kafka.controller.KafkaController)
[2019-04-02 20:58:09,701] TRACE [Controller id=0] Leader imbalance ratio for broker 0 is 0.0 (kafka.controller.KafkaController)
